module Decode (
	input			[6:0]	opcode_i,
	output reg			memtoreg_o,
	output reg			memread_o,
	output reg			regwrite_o,
	output reg			memwrite_o,
	output reg			alusrc_o
);

	always @(*)
	begin
		case (opcode_i)
				7'b0110011:						//Instrucci贸n Tipo R
					begin
						memtoreg_o	=	1'b0;
						memread_o	=	1'b0;
						regwrite_o	=	1'b1;
						memwrite_o	=	1'b0;
						alusrc_o		=	1'b0;
					end
				7'b0010011:						//Instrucci贸n Tipo I
					begin
						memtoreg_o	=	1'b0;
						memread_o	=	1'b0;
						regwrite_o	=	1'b1;
						memwrite_o	=	1'b0;
						alusrc_o		=	1'b1;
					end
				7'b0100011:						//Instrucci贸n Tipo S
					begin
						memtoreg_o	=	1'b0;
						memread_o	=	1'b0;
						regwrite_o	=	1'b0;
						memwrite_o	=	1'b1;
						alusrc_o		=	1'b1;
					end
				7'b0000011:						//Instrucci贸n Tipo L
					begin
						memtoreg_o	=	1'b1;
						memread_o	=	1'b1;
						regwrite_o	=	1'b1;
						memwrite_o	=	1'b0;
						alusrc_o		=	1'b1;
					end
				default:
					begin
						memtoreg_o	=	1'b0;
						memread_o	=	1'b0;
						regwrite_o	=	1'b0;
						memwrite_o	=	1'b0;
						alusrc_o		=	1'b0;
					end	
		endcase
	end
endmodule 